<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="longish-php-code-style" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="phpcs.xsd">
    <description>Longish PHP Code Style preset</description>

    <rule ref="PSR12"/>
    <!--
      Ensures that switch statements are defined according to PSR2.
    -->
    <rule ref="PSR2.ControlStructures.SwitchDeclaration">
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>

    <rule ref="Generic.Arrays.ArrayIndent">
        <properties>
            <property name="indent" value="4" />
        </properties>
    </rule>

    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"/>
    </rule>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>

    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings"/>
    <!--
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="200"/>
        </properties>
    </rule>
    -->
    <rule ref="Generic.Files.LineLength">
        <exclude name="Generic.Files.LineLength.MaxExceeded"/>
        <exclude name="Generic.Files.LineLength.TooLong"/>
    </rule>
    <!--
    <rule ref="Generic.Files.LineLength.MaxExceeded">
        <message>Line contains %s chars, which is longer than the max limit of %s</message>
        <type>warning</type>
    </rule>
    <rule ref="Generic.Files.LineLength.TooLong">
        <message>Line longer than %s characters; contains %s characters</message>
        <type>warning</type>
    </rule>
    -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.SpaceAfterCast.NoSpace"/>

    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>

    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="7"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="20"/>
            <property name="absoluteComplexity" value="40"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.CyclomaticComplexity.TooHigh">
        <type>warning</type>
    </rule>
    <rule ref="Generic.Metrics.CyclomaticComplexity.MaxExceeded">
        <type>warning</type>
    </rule>

    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <!-- Ban some functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count"/>
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="create_function" value="null"/>
            </property>
        </properties>
    </rule>

    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
    <rule ref="Generic.Formatting.SpaceAfterNot"/>

    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>

    <rule ref="Generic.Commenting.Todo.CommentFound">
        <message>Please review this TODO comment: %s</message>
        <type>warning</type>
    </rule>
    <rule ref="Generic.Commenting.Fixme.TaskFound">
        <message>Please review this FIXME comment: %s</message>
        <type>warning</type>
    </rule>

    <rule ref="Generic.Classes.DuplicateClassName"/>

    <rule ref="PEAR.Commenting.InlineComment"/>
    <!--<rule ref="PEAR.ControlStructures.MultiLineCondition"/>-->
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>

    <rule ref="MySource.PHP.EvalObjectFactory"/>
    <rule ref="MySource.PHP.GetRequestData"/>
    <!--
    <rule ref="MySource.PHP.ReturnFunctionValue"/>
    -->

    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <!--
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
    -->
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
            <property name="spacingAfterLast" value="0" />
        </properties>
    </rule>

    <!--
      Ignore errors like "Expected 1 space before "?"; newline found (Squiz.WhiteSpace.OperatorSpacing.SpacingBefore)"
    -->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <rule ref="Squiz.Scope.StaticThisUsage"/>

    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired"/>

    <!--
        Extra rules from src
        Extra rules from https://github.com/slevomat/coding-standard
    -->

    <config name="installed_paths" value="../../longman/php-code-style/src,../../slevomat/coding-standard"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintstypehintdeclaration- -->
    <!--<rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration" />-->

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsuselessconstanttypehint- -->
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardexceptionsreferencethrowableonly- -->
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsdeclarestricttypes- -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2"/>
            <property name="newlinesCountAfterDeclare" value="2"/>
            <property name="spacesCountAroundEqualsSign" value="0"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardarraysdisallowimplicitarraycreation -->
    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardclassesuselesslatestaticbinding- -->
    <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardclassesclassstructure- -->
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="groups" type="array">
                <element value="uses"/>
                <element value="public constants"/>
                <element value="protected constants"/>
                <element value="private constants"/>
                <element value="public properties, public static properties, protected properties, protected static properties, private properties, private static properties"/>
                <element value="constructor, static constructors"/>
                <element value="public methods, public static methods, public static abstract methods, public abstract methods, protected methods, protected static methods, protected static abstract methods, protected abstract methods, private methods, private static methods"/>
                <element value="protected methods, protected static methods, protected static abstract methods, protected abstract methods, private methods, private static methods"/>
                <element value="private methods, private static methods"/>
                <element value="magic methods"/>
                <element value="destructor"/>
            </property>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructuresdisallowcontinuewithoutintegeroperandinswitch- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardcontrolstructuresassignmentincondition -->
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructuresrequirenullcoalesceoperator- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructuresearlyexit- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit">
        <type>warning</type>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardfunctionsstaticclosure- -->
    <rule ref="SlevomatCodingStandard.Functions.StaticClosure"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardoperatorsdisallowequaloperators- -->
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardoperatorsrequirecombinedassignmentoperator- -->
    <rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardclassesunusedprivateelements- -->
    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements">
        <type>warning</type>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardfunctionsunusedinheritedvariablepassedtoclosure- -->
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesunuseduses- -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesusefromsamenamespace- -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesuselessalias- -->
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardphpuselessparentheses- -->
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardphpoptimizedfunctionswithoutunpacking -->
    <rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardphpuselesssemicolon- -->
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardvariablesduplicateassignmenttovariable -->
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardvariablesunusedvariable -->
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
        <properties>
            <property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardexceptionsdeadcatch -->
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardarraystrailingarraycomma- -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardarrayssinglelinearraywhitespace- -->
    <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardclassesmodernclassnamereference- -->
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardclassespropertyspacing- -->
    <rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
        <properties>
            <property name="minLinesCountBeforeWithComment" value="0"/>
            <property name="maxLinesCountBeforeWithComment" value="1"/>
            <property name="minLinesCountBeforeWithoutComment" value="0"/>
            <property name="maxLinesCountBeforeWithoutComment" value="1"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardclassestraitusespacing- -->
    <rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">
        <properties>
            <property name="linesCountBeforeFirstUse" value="0"/>
            <property name="linesCountBetweenUses" value="0"/>
            <property name="linesCountAfterLastUse" value="1"/>
            <property name="linesCountAfterLastUseWhenLastInClass" value="0"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructureslanguageconstructwithparentheses- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructuresrequireshortternaryoperator- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructuresdisallowyodacomparisonrequireyodacomparison- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardfunctionstrailingcommaincall- -->
    <rule ref="SlevomatCodingStandard.Functions.TrailingCommaInCall">
        <type>warning</type>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesalphabeticallysorteduses- -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesrequireonenamespaceinfile -->
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesnamespacedeclaration- -->
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesnamespacespacing- -->
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing">
        <properties>
            <property name="linesCountBeforeNamespace" value="1"/>
            <property name="linesCountAfterNamespace" value="1"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesusespacing- -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
        <properties>
            <property name="linesCountBeforeFirstUse" value="1"/>
            <property name="linesCountBetweenUseTypes" value="1"/>
            <property name="linesCountAfterLastUse" value="1"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardnamespacesreferenceusednamesonly- -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardoperatorsspreadoperatorspacing- -->
    <rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing">
        <properties>
            <property name="spacesCountAfterOperator" value="0"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintslongtypehints- -->
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsnulltypehintonlastposition- -->
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardphpshortlist- -->
    <rule ref="SlevomatCodingStandard.PHP.ShortList"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardphptypecast- -->
    <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardclassesclassconstantvisibility- -->
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsreturntypehintspacing- -->
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing">
        <properties>
            <property name="spacesCountBeforeColon" value="0"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsnullabletypefornulldefaultvalue- -->
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsparametertypehintspacing- -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardtypehintspropertytypehintspacing- -->
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHintSpacing"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesdisallowgroupuse -->
    <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesfullyqualifiedglobalconstants- -->
    <!--<rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants"/>-->

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesfullyqualifiedglobalfunctions- -->
    <!--<rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions"/>-->

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesusedoesnotstartwithbackslash- -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardtypehintsreturntypehintspacing- -->
    <rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
        <properties>
            <property name="linesCountAfterOpeningBrace" value="0"/>
            <property name="linesCountBeforeClosingBrace" value="0"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesfullyqualifiedclassnameinannotation- -->
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcommentingforbiddenannotations- -->
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
        <properties>
            <property name="forbiddenAnnotations" type="array" value="@author,@created,@version,@package,@copyright,@license"/>
        </properties>
    </rule>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcommentingforbiddencomments- -->
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcommentinginlinedoccommentdeclaration- -->
    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcommentingrequireonelinepropertydoccomment- -->
    <rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcommentinguselessinheritdoccomment- -->
    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardcontrolstructuresuselessternaryoperator- -->
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>

    <!-- https://github.com/slevomat/coding-standard/tree/5.0.4#slevomatcodingstandardnamespacesmultipleusesperline -->
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardcommentingrequireonelinepropertydoccomment- -->
    <rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment">
        <exclude-pattern>*/*</exclude-pattern>
    </rule>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardcommentinginlinedoccommentdeclaration- -->
    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration">
        <exclude-pattern>*/*</exclude-pattern>
    </rule>

    <!-- https://github.com/slevomat/coding-standard#slevomatcodingstandardphpuselessparentheses- -->
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses">
        <exclude-pattern>*/*</exclude-pattern>
    </rule>

</ruleset>
